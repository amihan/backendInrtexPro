generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model admins {
  id       Int     @id @default(autoincrement())
  login    String  @db.Text
  password String  @db.Text
  fio      String  @db.Text
  role     String  @db.Text
  avatar   String? @db.Text
}

model ads {
  id              Int    @id @default(autoincrement())
  title           String @db.Text
  text            String @db.LongText
  recipient_group String @db.Text
  recipients      String @db.Text
  date            String @db.Text
  author          Int
}

model attendance {
  id              Int      @id @default(autoincrement())
  dateat          DateTime @db.Date
  iduser          Int
  group_id        Int
  status          String?  @db.Text
  punctuality     Float?   @db.Float
  behaviour       Float?   @db.Float
  activity        Float?   @db.Float
  tasks           Float?   @db.Float
  estimation_home Float?   @db.Float
}

model contracts {
  id                Int     @id @default(autoincrement())
  number            String  @db.VarChar(30)
  date              String  @db.VarChar(30)
  name              String  @db.Text
  date_birth_parent String? @db.Text
  child             String  @db.Text
  date_birth        String  @db.Text
  passport          String  @db.Text
  issued            String  @db.Text
  phone             String  @db.Text
  residency         String  @db.Text
  id_user           Int
}

model courses {
  id           Int    @id @default(autoincrement())
  namecourse   String @db.Text
  abbreviation String @db.Text
  description  String @db.Text
  color1       String @db.VarChar(50)
  color2       String @db.VarChar(50)
}

model group_members {
  id      Int @id @default(autoincrement())
  groupid Int
  userid  Int
}

model groupuser {
  id                Int     @id @default(autoincrement())
  name              String  @db.Text
  course            String  @db.Text
  address           String  @db.Text
  teachers          String  @db.Text
  days              String? @db.Text
  times             String? @db.Text
  year              Int
  first_day         Int     @map("first-day")
  first_time_start  String  @map("first-time-start") @db.VarChar(50)
  first_time_end    String  @map("first-time-end") @db.VarChar(50)
  second_day        Int?    @map("second-day")
  second_time_start String? @map("second-time-start") @db.VarChar(50)
  second_time_end   String? @map("second-time-end") @db.VarChar(50)
  cabinet           Int
}

model individual {
  id           Int    @id @default(autoincrement())
  contract     String @db.Text
  datecontract String @db.Text
  fio          String @db.Text
  course       String @db.Text
  teacher      Int
  datepay      String @db.Text
  phone        String @db.Text
  datebirth    String @db.Text
}

model ktplan {
  id         Int      @id @default(autoincrement())
  datelesson DateTime @db.Date
  namelesson String   @db.Text
  time_begin String   @db.Text
  time_end   String   @db.Text
  type       String   @db.Text
  cabinet    String   @db.Text
  place      String   @db.Text
  homework   String?  @db.Text
  max_points String?  @map("max-points") @db.Text
  idgroup    String   @db.Text
}

model openday {
  id       Int    @id @default(autoincrement())
  parent   String @db.Text
  kid      String @db.Text
  tel      String @db.Text
  age      String @db.Text
  office   String @db.VarChar(10)
  agegroup String @db.VarChar(30)
  year     Int
}

model parents {
  name1    String? @db.Text
  phone1   String? @db.Text
  name2    String? @db.Text
  phone2   String? @db.Text
  login    String? @db.Text
  password String? @db.Text
  email    String? @db.Text
  id       Int     @id @default(autoincrement())
  hash     String  @db.Text
}

model pay {
  id          Int    @id @default(autoincrement())
  id_user     Int    @map("id-user")
  id_group    Int    @map("id-group")
  price       Int
  type        String @db.VarChar(10)
  way         String @db.VarChar(10)
  date_create Int    @map("date-create")
  date_change Int
  month       Int
}

model statuses_summer {
  id      Int     @id @default(autoincrement())
  name    String  @db.Text
  comment String? @db.Text
}

model summer {
  id          Int     @id @default(autoincrement())
  parent      String  @db.Text
  kid         String  @db.Text
  tel         String? @db.Text
  call_type   String? @db.Text
  age         String? @db.Text
  type        String? @db.Text
  office      String? @db.Text
  camp_change String? @db.Text
  date_time   String? @db.Text
  status      Int
  comment     String? @db.Text
  date_change String  @db.Text
  utm_source  String? @db.Text
}

model teachers {
  id       Int    @id @default(autoincrement())
  surname  String @db.Text
  initials String @db.Text
  avatar   String @db.Text
  color    String @db.Text
  status   Int?
}

model users {
  id           Int     @id @default(autoincrement())
  contract     String? @db.Text
  datacontract String? @db.Text
  fio          String  @db.Text
  groupuser    String? @db.Text
  datepay      String  @db.Text
  parents      String  @db.Text
  telParents   String  @db.Text
  telStudent   String  @db.Text
  dateBirth    String  @db.Text
  parent       String? @db.Text
}

model application_traning {
  id          Int     @id @default(autoincrement())
  date        Int
  id_admin    Int
  name_child  String  @db.VarChar(100)
  age_child   Int
  name_parent String  @db.VarChar(100)
  phone       String  @db.VarChar(50)
  courses     String? @db.Text
  comment     String  @db.Text
  id_channel  Int
  year        Int
}

model cabinet {
  id     Int    @id @default(autoincrement())
  name   String @db.VarChar(50)
  office Int
}

model days_week {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(50)

  @@map("days-week")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model group_members_probes {
  id       Int
  id_group Int
  id_user  Int

  @@ignore
}

model office {
  id      Int    @id @default(autoincrement())
  name    String @db.VarChar(50)
  address String @db.Text
}

model pay_old {
  id        Int    @id @default(autoincrement())
  datepay   String @db.Text
  sumpay    Int
  iduser    Int
  namegroup String @db.Text
  sumpayone Int
  countless Float  @db.Float
  type      String @db.Text
  way       String @db.Text
  datebegin String @db.Text

  @@map("pay-old")
}

model pay_type {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(50)

  @@map("pay-type")
}

model pay_way {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(50)

  @@map("pay-way")
}

model utm_source {
  id   Int    @id @default(autoincrement())
  eng  String @db.Text
  ru   String @db.Text
  link String @db.Text
}
